{"name": "test_order_wcontry", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoAlertPresentException: Message: no such alert\n  (Session info: chrome=109.0.5414.120)\nStacktrace:\nBacktrace:\n\t(No symbol) [0x00BC6643]\n\t(No symbol) [0x00B5BE21]\n\t(No symbol) [0x00A5D960]\n\t(No symbol) [0x00A56180]\n\t(No symbol) [0x00A71038]\n\t(No symbol) [0x00AAFDF4]\n\t(No symbol) [0x00A70DC7]\n\t(No symbol) [0x00AAFB76]\n\t(No symbol) [0x00A849C1]\n\t(No symbol) [0x00A85E5D]\n\tGetHandleVerifier [0x00E3A142+2497106]\n\tGetHandleVerifier [0x00E685D3+2686691]\n\tGetHandleVerifier [0x00E6BB9C+2700460]\n\tGetHandleVerifier [0x00C73B10+635936]\n\t(No symbol) [0x00B64A1F]\n\t(No symbol) [0x00B6A418]\n\t(No symbol) [0x00B6A505]\n\t(No symbol) [0x00B7508B]\n\tBaseThreadInitThunk [0x76217D69+25]\n\tRtlInitializeExceptionChain [0x779CBB9B+107]\n\tRtlClearBits [0x779CBB1F+191]", "trace": "self = <demobl.Tests.test_demblaz.TestProducts object at 0x000002EF0AD64310>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_order_wcontry(self):  # page preview 8              expected error but no     (fail)\n>       self.execute_orderWithout_country()\n\ntest_demblaz.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Page\\demoblaze_page.py:142: in execute_orderWithout_country\n    self.alert_ok()\n..\\Basse\\demobz_base.py:51: in alert_ok\n    self._driver.switch_to.alert.accept()\n..\\..\\..\\work-enviroment-venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py:57: in alert\n    _ = alert.text\n..\\..\\..\\work-enviroment-venv\\Lib\\site-packages\\selenium\\webdriver\\common\\alert.py:66: in text\n    return self.driver.execute(Command.W3C_GET_ALERT_TEXT)[\"value\"]\n..\\..\\..\\work-enviroment-venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002EF0A00BE10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such alert\",\"message\":\"no such alert\\\\n  (Session info: chrome=109.0.5...dInitThunk [0x76217D69+25]\\\\n\\\\tRtlInitializeExceptionChain [0x779CBB9B+107]\\\\n\\\\tRtlClearBits [0x779CBB1F+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoAlertPresentException: Message: no such alert\nE         (Session info: chrome=109.0.5414.120)\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x00BC6643]\nE       \t(No symbol) [0x00B5BE21]\nE       \t(No symbol) [0x00A5D960]\nE       \t(No symbol) [0x00A56180]\nE       \t(No symbol) [0x00A71038]\nE       \t(No symbol) [0x00AAFDF4]\nE       \t(No symbol) [0x00A70DC7]\nE       \t(No symbol) [0x00AAFB76]\nE       \t(No symbol) [0x00A849C1]\nE       \t(No symbol) [0x00A85E5D]\nE       \tGetHandleVerifier [0x00E3A142+2497106]\nE       \tGetHandleVerifier [0x00E685D3+2686691]\nE       \tGetHandleVerifier [0x00E6BB9C+2700460]\nE       \tGetHandleVerifier [0x00C73B10+635936]\nE       \t(No symbol) [0x00B64A1F]\nE       \t(No symbol) [0x00B6A418]\nE       \t(No symbol) [0x00B6A505]\nE       \t(No symbol) [0x00B7508B]\nE       \tBaseThreadInitThunk [0x76217D69+25]\nE       \tRtlInitializeExceptionChain [0x779CBB9B+107]\nE       \tRtlClearBits [0x779CBB1F+191]\n\n..\\..\\..\\work-enviroment-venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: NoAlertPresentException"}, "start": 1675322922534, "stop": 1675322934100, "uuid": "b4300667-65a7-499d-aefd-e66a8f010ad4", "historyId": "2ba60b35aef5ec976c2d2802dd4ec735", "testCaseId": "58463825aa26a903d187633c7740d762", "fullName": "test_demblaz.TestProducts#test_order_wcontry", "labels": [{"name": "severity", "value": "normal"}, {"name": "suite", "value": "test_demblaz"}, {"name": "subSuite", "value": "TestProducts"}, {"name": "host", "value": "LAPTOP-CE0N2UOJ"}, {"name": "thread", "value": "12068-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_demblaz"}]}